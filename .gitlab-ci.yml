stages:
  - sync_to_github

sync_to_github:
  stage: sync_to_github
  script:
    # Configure o usuário Git para commits
    - git config user.name "${GITLAB_USER_NAME}"
    - git config user.email "${GITLAB_USER_EMAIL}"

    # Verifique o status e branches do repositório GitLab
    - echo "Status do repositório GitLab:"
    - git status
    - echo "Branches do repositório GitLab:"
    - git branch

    # Crie um diretório temporário e clone o repositório GitHub
    - mkdir -p temp_repo
    - cd temp_repo
    - git clone https://${GITHUB_USERNAME}:${GITHUB_TOKEN}@github.com/${GITHUB_USERNAME}/docs.git
    - cd docs

    # Verifique o status e branches do repositório GitHub
    - echo "Status do repositório GitHub:"
    - git status
    - echo "Branches do repositório GitHub:"
    - git branch

    # Mostre o histórico de commits do GitHub
    - echo "Histórico de commits do GitHub:"
    - git log --oneline

    # Volte para o repositório GitLab e mostre o histórico de commits
    - cd ../..
    - echo "Histórico de commits do GitLab:"
    - git log --oneline

    # Compare o conteúdo dos repositórios
    - echo "Comparando conteúdos dos repositórios:"
    - diff -r temp_repo/docs . || true

    # Remova o diretório temporário
    - cd ..
    - rm -rf temp_repo

    # Verifique se há alterações no repositório GitLab e faça o commit e push se houver
    - |
      if [ -d ".git" ]; then
        git checkout main || git checkout -b main
        git add .
        if ! git diff-index --quiet HEAD; then
          git commit -m "Sync from GitLab CI"
          git remote add github https://${GITHUB_USERNAME}:${GITHUB_TOKEN}@github.com/${GITHUB_USERNAME}/docs.git || true
          git push github main
        else
          echo "Nenhuma alteração para commitar."
        fi
      else
        echo "Não é um repositório Git válido."
      fi
  only:
    - main
